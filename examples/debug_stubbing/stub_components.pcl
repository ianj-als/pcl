#
# Copyright Capita Translation and Interpreting 2013
#
# This file is part of Pipeline Creation Language (PCL).
# 
# Pipeline Creation Language (PCL) is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Pipeline Creation Language (PCL) is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Pipeline Creation Language (PCL).  If not, see <http://www.gnu.org/licenses/>.
#
import parallel_component as parallel
import sequential_component as sequential

component stub_components
  inputs a, b
  output a, b, seq_c, seq_d, para_e, para_f, para_g, para_h
  declare
    para := new parallel
    seq := new sequential
  as
    wire a -> a, b -> b &&&
    (seq &&&
     (split >>> wire (a -> a, b -> b), (a -> c, b -> d) >>> para >>> merge top[e] -> para_e, top[f] -> para_f,
                                                                           bottom[g] -> para_g, bottom[h] -> para_h) >>>
     merge top[c] -> seq_c, top[d] -> seq_d,
           bottom[para_e] -> para_e, bottom[para_f] -> para_f, bottom[para_g] -> para_g, bottom[para_h] -> para_h) >>>
    merge top[a] -> a, top[b] -> b,
          bottom[seq_c] -> seq_c, bottom[seq_d] -> seq_d,
          bottom[para_e] -> para_e, bottom[para_f] -> para_f, bottom[para_g] -> para_g, bottom[para_h] -> para_h
